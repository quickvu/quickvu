Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> ACTION parameters
Rule 2     parameters -> LPAR RPAR
Rule 3     parameters -> LPAR varargslist RPAR
Rule 4     varargslist -> varargslist COMMA ELEMENTS
Rule 5     varargslist -> ELEMENTS
Rule 6     varargslist -> NUM
Rule 7     varargslist -> NAME

Terminals, with rules where they appear

ACTION               : 1
COMMA                : 4
ELEMENTS             : 4 5
LPAR                 : 2 3
NAME                 : 7
NUM                  : 6
RPAR                 : 2 3
error                : 

Nonterminals, with rules where they appear

parameters           : 1
statement            : 0
varargslist          : 3 4

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . ACTION parameters

    ACTION          shift and go to state 1

    statement                      shift and go to state 2

state 1

    (1) statement -> ACTION . parameters
    (2) parameters -> . LPAR RPAR
    (3) parameters -> . LPAR varargslist RPAR

    LPAR            shift and go to state 3

    parameters                     shift and go to state 4

state 2

    (0) S' -> statement .



state 3

    (2) parameters -> LPAR . RPAR
    (3) parameters -> LPAR . varargslist RPAR
    (4) varargslist -> . varargslist COMMA ELEMENTS
    (5) varargslist -> . ELEMENTS
    (6) varargslist -> . NUM
    (7) varargslist -> . NAME

    RPAR            shift and go to state 7
    ELEMENTS        shift and go to state 5
    NUM             shift and go to state 9
    NAME            shift and go to state 6

    varargslist                    shift and go to state 8

state 4

    (1) statement -> ACTION parameters .

    $end            reduce using rule 1 (statement -> ACTION parameters .)


state 5

    (5) varargslist -> ELEMENTS .

    RPAR            reduce using rule 5 (varargslist -> ELEMENTS .)
    COMMA           reduce using rule 5 (varargslist -> ELEMENTS .)


state 6

    (7) varargslist -> NAME .

    RPAR            reduce using rule 7 (varargslist -> NAME .)
    COMMA           reduce using rule 7 (varargslist -> NAME .)


state 7

    (2) parameters -> LPAR RPAR .

    $end            reduce using rule 2 (parameters -> LPAR RPAR .)


state 8

    (3) parameters -> LPAR varargslist . RPAR
    (4) varargslist -> varargslist . COMMA ELEMENTS

    RPAR            shift and go to state 11
    COMMA           shift and go to state 10


state 9

    (6) varargslist -> NUM .

    RPAR            reduce using rule 6 (varargslist -> NUM .)
    COMMA           reduce using rule 6 (varargslist -> NUM .)


state 10

    (4) varargslist -> varargslist COMMA . ELEMENTS

    ELEMENTS        shift and go to state 12


state 11

    (3) parameters -> LPAR varargslist RPAR .

    $end            reduce using rule 3 (parameters -> LPAR varargslist RPAR .)


state 12

    (4) varargslist -> varargslist COMMA ELEMENTS .

    RPAR            reduce using rule 4 (varargslist -> varargslist COMMA ELEMENTS .)
    COMMA           reduce using rule 4 (varargslist -> varargslist COMMA ELEMENTS .)

